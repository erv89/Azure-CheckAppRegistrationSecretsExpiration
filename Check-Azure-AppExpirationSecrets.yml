trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)' # Build Id use as tag for the image creation


stages:
- stage: Containerize_App
  displayName: Containerrize App
  variables:
  - group: 'name of variable group' # I used Azure DevOps variable groups to store the client id, secret and Send_grid key, etc.
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'ContainerConnection' # Name of the DevOPs connection with Azure Registry
        repository: 'app/your-app-name' # Name for the image that will be create and push to the Azure Registry
        command: 'build'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)'
        tags: '$(tag)'
		# Passing the variables from the variable group as parameters to compouse the container image
        arguments: |
          --build-arg client_id=$(clientid)
          --build-arg client_secret=$(clientsecret)
          --build-arg tenant_id=$(tenantid)
          --build-arg sendgrid_api_key=$(sendgridkey)
          --build-arg subject=$(environment_subject)
    - task: Docker@2
      displayName: Push image
      inputs:
        containerRegistry: 'ContainerConnection' # Name of the DevOPs connection with Azure Registry
        repository: 'app/your-app-name' # Name for the image that will be create and push to the Azure Registry
        command: 'push'

# repeat tasks above if more environments or tenant need ot be check
#In the code above we're just checking a single tenant.